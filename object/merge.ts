// ─────────────────────────────────────────────────────────────────────────────
// 描述：递归合并source对象自身和继承的属性到目标对象
// ─────────────────────────────────────────────────────────────────────────────


// ─────────────────────────────────────────────────────────────────────────────
// * @param object The destination object.
// * @param [sources] The source objects.

// <TObject, TSource>(object: TObject, source: TSource): TObject & TSource

// object:
// TObject
// source:
// TSource
// ─────────────────────────────────────────────────────────────────────────────
import { merge } from "lodash-es";


// 原始对象
const source = {
    a: {
        c: 1
    },
    b: [1, {
        d: [1, 2, 3]
    }, 3],
}

const target = {
    e: 1,
    f: {
        g: 2
    }
}

// ─────────────────────────────────────────────────────────────────────────────
// 递归合并对象
// ─────────────────────────────────────────────────────────────────────────────
console.log("%o",
    merge(target, source)
);

// {
//     e: 1,
//     f: { g: 2 },
//     a: { c: 1 },
//     b: [1, { d: [1, 2, 3] }, 3]
// }
