// ─────────────────────────────────────────────────────────────────────────────
// 描述：返回一个从对象中选择指定路径的属性的新对象
// ─────────────────────────────────────────────────────────────────────────────


// ─────────────────────────────────────────────────────────────────────────────
// * @param object The source object.
// * @param [props] The property names to pick, specified


// <T>(object: T | null | undefined, ...props: Array<Many<PropertyPath>>): PartialObject<T>

// object:
// T | null | undefined
// ...props:
// Array<Many<PropertyPath>>
// ─────────────────────────────────────────────────────────────────────────────
import { pick } from "lodash-es";


// 原始对象
const obj = {
    a: "1",
    b: {
        b1: "111",
        b2: "123"
    },
    c: [1, 2, 3]
}

// ─────────────────────────────────────────────────────────────────────────────
// 从对象中选择指定路径的属性
// ─────────────────────────────────────────────────────────────────────────────
console.log(
    pick(obj, ["a", "b.b1"]),
    pick(obj, ["a", "b.b1", "b.b2", "c[1]"]),
);

// { a: '1', b: { b1: '111' } } 
// { a: '1', b: { b1: '111', b2: '123' }, c: [ <1 empty item>, 2 ] }
