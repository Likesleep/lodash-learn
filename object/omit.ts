// ─────────────────────────────────────────────────────────────────────────────
// 描述：返回一个删除掉对象指定属性的新对象
// ─────────────────────────────────────────────────────────────────────────────


// ─────────────────────────────────────────────────────────────────────────────
// * @param object The source object.
// * @param [paths] The property names to omit, specified


// <T extends object>(object, ...paths): PartialObject<T>

// object:
// T | null | undefined
// ...paths:
// Array<Many<PropertyName>>

// ─────────────────────────────────────────────────────────────────────────────
import { omit } from "lodash-es";



// 原始对象
const obj = {
    a: "1",
    b: {
        b1: "111",
        b2: "123"
    },
    c: [1, 2, 3]
}

// ─────────────────────────────────────────────────────────────────────────────
// 删除指定属性
// ─────────────────────────────────────────────────────────────────────────────
console.log(
    omit(obj, ["a", "b.b1"]),
    omit(obj, ["a", "b", "c[0]"]),
);

// { b: { b2: '123' }, c: [ <1 empty item>, 2, 3 ] }
// { c: [ <1 empty item>, 2, 3 ] }